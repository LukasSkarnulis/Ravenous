{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/ErrorBoundary/ErrorBoundary.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","business","this","props","className","src","imageSrc","alt","name","adress","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","href","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address","address1","zip_code","categories","title","review_count","ErrorBoundary","refreshPage","window","reload","hasError","error","alert","children","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.02298d95.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"D:/Git Bash/ravenous/src/components/Business/Business.css\"\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n      const {business} = this.props;\r\n        return (\r\n         <div className=\"Business\">\r\n         <div className=\"image-container\">\r\n        <img src={business.imageSrc} alt=''/>\r\n          </div>\r\n          <h2>{business.name}</h2>\r\n           <div className=\"Business-information\">\r\n    <div className=\"Business-address\">\r\n      <p>{business.adress}</p>\r\n      <p>{business.city}</p>\r\n      <p>{business.state} {business.zipCode}</p>\r\n    </div>\r\n    <div className=\"Business-reviews\">\r\n      <h3>{business.category}</h3>\r\n      <h3 className=\"rating\">{business.rating}</h3>\r\n      <p>{business.reviewCount}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n        )\r\n    }\r\n}\r\nexport default Business;","import React from \"react\";\r\nimport \"./BusinessList.css\";\r\nimport Business from \"../Business/Business\";\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                 {this.props.businesses.map(business => {\r\n                  return <Business key={business.id} business={business} />;   \r\n                    })}\r\n            </div>   \r\n        );\r\n    }\r\n};\r\nexport default BusinessList;","import React from \"react\";\r\nimport \"D:/Git Bash/ravenous/src/components/SearchBar/SearchBar.css\";\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: \" \",\r\n      location: \" \",\r\n      sortBy: \"best_match\"\r\n    };\r\n  this.handleTermChange = this.handleTermChange.bind(this);\r\n  this.handleLocationChange = this.handleLocationChange.bind(this);\r\n  this.handleSearch = this.handleSearch.bind(this);\r\n  this.sortByOptions = {\r\n    \"Best Match\": \"best_match\",\r\n    \"Highest Rated\": \"rating\",\r\n    \"Most Reviewed\": \"review_count\"\r\n  };\r\n  }\r\n  getSortByClass(sortByOption) {\r\n    if (this.state.sortBy === sortByOption) {\r\n      return \"active\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({sortBy: sortByOption});\r\n  }\r\n  handleTermChange(event) {\r\n    this.setState({term: event.target.value});\r\n  }\r\n  handleLocationChange(event) {\r\n    this.setState({location: event.target.value});\r\n  }\r\n  handleSearch(event) {\r\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    event.preventDefault();\r\n  }\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>\r\n        })\r\n\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n  <div className=\"SearchBar-sort-options\">\r\n    <ul>\r\n      {this.renderSortByOptions()}\r\n    </ul>\r\n  </div>\r\n  <div className=\"SearchBar-fields\">\r\n    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\r\n    <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\r\n  </div>\r\n  <div className=\"SearchBar-submit\">\r\n    <a href=\"www.#.com\" onClick={this.handleSearch}>Let's Go</a>\r\n  </div>\r\n</div>\r\n        );\r\n    }\r\n};\r\nexport default SearchBar;","const apiKey = \"uQqPEDYLsLEiO0OJlgIWs76oDxJhfdteYn6J52kzAcf5BJAcBawPSbdCY-q6gPxElquDdKJJirn_bZe9J8pG3SGPBYoFI7CB-6Qo65ao9blcW325t_Lh1dyRfg5hXnYx\";\r\nconst Yelp = {\r\n    search(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {headers: {\r\n            Authorization: `Bearer ${apiKey}`}\r\n        }).then(response => {\r\n            return response.json().then(jsonResponse => {\r\n                if (jsonResponse.businesses) {\r\n                    return jsonResponse.businesses.map(business => {\r\n                        return {\r\n                            id: business.id,\r\n                            imageSrc: business.image_url,\r\n                            name: business.name,\r\n                            address: business.location.address1,\r\n                            city: business.location.city,\r\n                            state: business.location.state,\r\n                            zipCode: business.location.zip_code,\r\n                            category: business.categories[0].title,\r\n                            rating: business.rating,\r\n                            reviewCount: business.review_count,\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nexport default Yelp","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false }\r\n    }\r\ncomponentDidCatch(error) {\r\n    this.setState({ hasError: true });\r\n}\r\nrefreshPage = () => {\r\n    window.location.reload(false);\r\n}\r\nrender() {\r\n    if (this.state.hasError) {\r\n        alert(\"Incorrect Search Input\")\r\n        this.refreshPage();\r\n    } return this.props.children;\r\n}\r\n}\r\nexport default ErrorBoundary;","import React from 'react';\nimport './App.css';\nimport BusinessList from \"D:/Git Bash/ravenous/src/components/BusinessList/BusinessList\";\nimport SearchBar from \"D:/Git Bash/ravenous/src/components/SearchBar/SearchBar\";\nimport Yelp from \"D:/Git Bash/ravenous/src/util/Yelp\";\nimport ErrorBoundary from \"D:/Git Bash/ravenous/src/components/ErrorBoundary/ErrorBoundary\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses})\n    })\n  }\n  render () {\n    return (\n      <div className=\"App\">\n    <h1>ravenous</h1>\n    <ErrorBoundary>\n    <SearchBar searchYelp={this.searchYelp}/>\n    <BusinessList businesses={this.state.businesses}/> \n    </ErrorBoundary>\n  </div>\n    );\n  }\n  }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}